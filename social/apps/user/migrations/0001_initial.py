# Generated by Django 4.0.2 on 2022-02-14 15:33

from django.conf import settings
from django.db import migrations, models
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, null=True, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(blank=True, max_length=15, null=True, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=15, null=True, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(blank=True, null=True, verbose_name='active')),
                ('is_online', models.BooleanField(default=True, verbose_name='online')),
                ('birthday', models.DateField(blank=True, null=True)),
                ('gender', models.IntegerField(choices=[(1, 'Male'), (2, 'Female')], null=True)),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=user.models.get_profile_pic_path)),
                ('validated', models.BooleanField(default=False)),
                ('cover_pic', models.ImageField(blank=True, null=True, upload_to=user.models.get_profile_pic_path)),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('is_admin', models.BooleanField(default=False, verbose_name='admin')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff')),
                ('blocked', models.ManyToManyField(blank=True, related_name='user_blocked', to=settings.AUTH_USER_MODEL)),
                ('chatted_with', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('followers', models.ManyToManyField(blank=True, related_name='user_followers', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(blank=True, related_name='user_following', to=settings.AUTH_USER_MODEL)),
                ('friends', models.ManyToManyField(blank=True, related_name='user_friends', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('stranger_chats', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('waiting', models.ManyToManyField(blank=True, related_name='user_waitings', to=settings.AUTH_USER_MODEL)),
                ('waiting_for', models.ManyToManyField(blank=True, related_name='user_waiting_for', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
    ]
